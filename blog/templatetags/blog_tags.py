

from django import template
from django.db.models import Count, Q
from datetime import datetime, date, time, timedelta
from django.utils import timezone
from taggit.models import Tag
from ..models import Comment, News # blog.models

register = template.Library()

@register.simple_tag
def popular_articles():
    ''' –í—ã–≤–æ–¥ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞—Ç–µ–π –∑–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ (7 / 1 –¥–Ω–µ–π) üí´ #48 '''
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ datetime
    now = timezone.now()
    # –≤—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –¥–Ω—è (00:00) 7 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    start_date = now - timedelta(days=7)
    # –≤—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è (00:00)
    today_start = timezone.make_aware(datetime.combine(date.today(), time.min))
    # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    articles = News.objects.annotate(
        total_view_count=Count('views', filter=Q(views__viewed_on__gte=start_date)),
        today_view_count=Count('views', filter=Q(views__viewed_on__gte=today_start))
    ).prefetch_related('views')
    # —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è, —Å–Ω–∞—á–∞–ª–∞ –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º –∑–∞ —Å–µ–≥–æ–¥–Ω—è, –∑–∞—Ç–µ–º –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
    popular_articles = articles.order_by('-total_view_count', '-today_view_count')[:10]
    return popular_articles

@register.simple_tag
def popular_tags():
    """
    –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–≥–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç–∞—Ç–µ–π,
    —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —ç—Ç–∏ —Ç–µ–≥–∏.  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥—É–ª—å django.db.models (Count) –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Django –∏ –º–æ–¥–µ–ª—å Tag –∏–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –ø–∞–∫–µ—Ç–∞ django-taggit –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–≥–∞–º–∏.

    –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π tag_list.
    –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ —Ç—Ä–∏ –∫–ª—é—á–∞ - name (–∏–º—è —Ç–µ–≥–∞),
    num_times (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π —Å —ç—Ç–∏–º —Ç–µ–≥–æ–º) –∏ slug (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ–≥–∞).
    """
    tags = Tag.objects.annotate(num_times=Count('news')).order_by('-num_times')
    tag_list = list(tags.values('name', 'num_times', 'slug'))
    return tag_list

@register.inclusion_tag('blog/inc/latest_comments.html')
def show_latest_comments(count=5):
    """
    –¢–µ–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Comment.objects.select_related('created_by'),
    —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏—Ö –∞–≤—Ç–æ—Ä–∞–º–∏.
    –§–∏–ª—å—Ç—Ä filter(is_published=True) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Å –ø–æ–º–æ—â—å—é order_by('-created_at').
    """
    comments = Comment.objects.select_related('created_by').filter(is_published=True).order_by('-created_at')[:count]
    return {'comments': comments}